//solution1
import java.util.ArrayList;
import java.util.List;
class Solution {
    public int[] solution(int n) {
        List<Integer> array = new ArrayList<>();
        for(int i=1; i<n+1; i++){
            if( i % 2 == 1) array.add(i);
        }
        // 리스트 -> 배열
        int[] answer = new int[array.size()];
        for(int i=0; i<array.size(); i++){
            answer[i] = array.get(i);
        }
        return answer;
    }
}

//soultion2
import java.util.ArrayList;
import java.util.List;

class Solution {
    public int[] solution(int n) {
        // 1. 리스트 생성
        List<Integer> array = new ArrayList<>();
        
        // 2. 홀수를 리스트에 추가
        for (int i = 1; i <= n; i++) {
            if (i % 2 == 1) { // 홀수 조건
                array.add(i);
            }
        }
        
        // 3. 리스트 -> 배열 변환 (stream 사용)
        return array.stream().mapToInt(i -> i).toArray();
    }
}

//solution3
import java.util.stream.IntStream;

class Solution {
    public int[] solution(int n) {
        return IntStream.rangeClosed(0, n).filter(value -> value % 2 == 1).toArray();
    }
}
